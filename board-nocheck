 <script>
  function isless(x,y) {return (x<y)};
</script>

  [[jsxgraph  width="800px" height="300px" ]]
  JXG.Options.text.cssDefaultStyle = 'direction:ltr; font-family:Arial;';
  JXG.Options.text.highlightCssDefaultStyle = 'direction:ltr';


//board
var board = JXG.JSXGraph.initBoard(divid, {
  boundingbox:[-15, 12, {#xmax#}, -1],
   axis: false,
  showCopyright: false,
  showNavigation: false,
  keepaspectratio: true,
  pan:{enabled:false},
  zoom:{enabled:false},
  resize: {enabled:true}
});
var attr={cssStyle: 'width:100px'};
var findit = function(arr, item) {
  for (var k = 0; isless(k ,arr.length); k++) { if (arr[k][0] == item) {return k} };
  return -1;
  }

const low = 5,
  high = 7,
  left = -13;
var x = [left],y;
var initial={#initial#};
if (initial=="low")  {y = [low]} else {y=[high]};

var imup={#img1#},
imdown={#img2#};

var cis = [],
  trans = [];
	var imgcup=[-1.2,4],imgcdown=[2.0,2.8];
	var imgup = board.create('image', [imup, [function(){return imgcup[0]},function(){return imgcup[1] }], [5.5,5.5]],{visible:false});
var imgdown = board.create('image', [imdown, [function(){return imgcdown[0]},function(){return imgcdown[1] }], [5,5]],{visible:false});

var Double={#D#},C={#C#};

var curve = board.create('curve', [x, y],{strokeColor: 'red',strokewidth:3});

var addpoint = function() {
//if ((imgup.getAttribute('visible'))||(imgdown.getAttribute('visible'))) {return}
  var temp = (y[y.length - 1] == low) ? high : low;
  var temp2 = x[x.length - 1] + 1;
  y.push(temp);
  x.push(temp2);
}

var removepoint = function() {
if ((imgup.getAttribute('visible'))||(imgdown.getAttribute('visible'))){imgup.setAttribute({visible: false});imgdown.setAttribute({visible: false});} else

  if (y.length == 1) {
    y[0] = low;
    x[0] = left;
		}
		else {
    var temp = y[y.length - 1]

    if (y[y.length - 1] == y[y.length - 2]) {
      var temp = cis.pop();
      board.removeObject(temp);
	  } 
	else if (trans.length!=0) {if (trans[trans.length-1][0]==y.length-1) {
		var temp=trans.pop();
	  board.removeObject(temp);
		}
}
   y.pop();
   x.pop();
}
 }
  
  
var addcis = function() {
  var temp = y[y.length - 1];
  var temp2 = x[x.length - 1] + (high - low);

  y.push(temp);
  x.push(temp2);
  var last = x.length - 1;
  var tx = x[last];
  var dy = (y[last] == high) ? -0.3 : 0.3;
  var ty = (y[last]) + dy;

  var temp = board.create('segment', [
    [tx, ty],
    [tx - (high - low), ty]
  ], {
    fixed: true,
		strokeColor: 'red'
  });
  cis.push(temp);
board.update();

return true;

}

var addtrans = function() {
  var last = y.length - 1;
  var ty = (y[last] == low) ? high : low;
  var oldY = y[last];
  var tx = x[last];
  var slp = (y[last] == low) ? 1 : -1;
  var dy = 0.3;
  y.push(ty);
  x.push(tx + 1);

  var seg = [];
  if (slp == 1) {
    seg = [
      [tx + dy, oldY],
      [tx + 1, ty - 2 * dy]
    ]
  } else {
    seg = [
      [tx, oldY - 2 * dy],
      [tx + 1 - dy, ty]
    ]
  }

  var t = board.create('segment', seg, {
    fixed: true,
    strokeColor: 'red'
  });
  trans.push([last + 1, t]);
  board.update();
  return true;
}


var addhead=function(){ 
var last=y.length-1;
  if (y[last]==high){
	imgup.setAttribute({visible: true});;
	imgcup[0]=x[last]-1.2;
	imgcup[1]=y[last]-3
	}
	else{
	imgdown.setAttribute({visible: true});
	imgcdown[0]=x[last]-1.05;
	imgcdown[1]=y[last]-2.35
	}
return true;
}


  for (let i = 1; isless(i, C); i++) { 
      var row=findit(Double,i);
     if (row !=-1)  {if(Double[row][1]=='cis') {addcis()} else {addtrans()}} else {addpoint()};
     }
if (Double[Double.length-1]=='COOH') {addhead()};
board.update();  

[[/jsxgraph]]
